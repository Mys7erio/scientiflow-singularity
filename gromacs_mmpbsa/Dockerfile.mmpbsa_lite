FROM mambaorg/micromamba:1.5.1 AS build

# Change user to root because we have to install a few packages from apt
USER root


# libopenmpi-dev is a dev dependency
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential libopenmpi-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/* 


RUN micromamba -y create python=3.11.8 \
    -n pyenv \
    -c conda-forge \
    gmx_MMPBSA "numpy<1.25" && \
    micromamba clean --all --yes


FROM python:3.11.8-slim-bookworm AS final

# /opt/conda/envs/pyenv/lib/python3.11/site-packages/GMXMMPBSA/tester.py
# libsz.so.2

# Install packages which provide necessary shared objects and headers
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libgomp1 libatlas-base-dev libhdf5-103 libcurl4 libaec0 libnghttp2-14 libssh2-1 libssl3 && \
    apt-get clean && rm -rf /var/lib/apt/lists/*


# Copy GMX_MMPBSA, parmed and numpy from micromamba build stage so that we don't have to compile it
COPY --from=build /opt/conda/envs/pyenv/lib/python3.11/site-packages/GMXMMPBSA /usr/local/lib/python3.11/site-packages/GMXMMPBSA
COPY --from=build /opt/conda/envs/pyenv/lib/python3.11/site-packages/parmed /usr/local/lib/python3.11/site-packages/parmed
COPY --from=build /opt/conda/envs/pyenv/lib/python3.11/site-packages/numpy /usr/local/lib/python3.11/site-packages/numpy
# COPY --from=build /opt/conda/envs/pyenv/lib/python3.11/site-packages/h5py /usr/local/lib/python3.11/site-packages/h5py

# COPY --from=build /opt/conda/envs/pyenv/lib/libhdf5.so.310.5.1 /usr/lib/x86_64-linux-gnu/libhdf5.so.310
# COPY --from=build /opt/conda/envs/pyenv/lib/libcurl.so.4.8.0 /usr/lib/x86_64-linux-gnu/libcurl.so.4
# COPY --from=build /opt/conda/envs/pyenv/lib/libsz.so.2.0.1 /usr/lib/x86_64-linux-gnu/libsz.so.2
# COPY --from=build /opt/conda/envs/pyenv/lib/libnghttp2.so.14.28.3 /usr/lib/x86_64-linux-gnu/libnghttp2.so.14
# COPY --from=build /opt/conda/envs/pyenv/lib/libhdf5_hl.so.310.0.6 /usr/lib/x86_64-linux-gnu/libhdf5_hl.so.310
# COPY --from=build /opt/conda/envs/pyenv/lib/libssh2.so.1.0.1 /usr/lib/x86_64-linux-gnu/libssh2.so.1
# COPY --from=build /opt/conda/envs/pyenv/lib/libssl.so.3 /usr/local/lib/libgmx_mmpbsa.so.3

# Installing h5py from pip saved me from installing a lot of dependencies by hand
RUN pip install --no-cache h5py


# Copy the gmx_MMPBSA executables from the micromamba build stage
COPY --from=build /opt/conda/envs/pyenv/bin/gmx_MMPBSA /usr/local/bin/gmx_MMPBSA
COPY --from=build /opt/conda/envs/pyenv/bin/gmx_MMPBSA_ana /usr/local/bin/gmx_MMPBSA_ana
COPY --from=build /opt/conda/envs/pyenv/bin/gmx_MMPBSA_test /usr/local/bin/gmx_MMPBSA_test


# Install gromacs from local directory, and extract inside the container
COPY ./gromacs.tar.gz /tmp/gromacs.tar.gz
RUN tar xzvf /tmp/gromacs.tar.gz -C / && rm /tmp/gromacs.tar.gz


# Soft link the python3.11 executable to where micromamba executables expect it
# Link gromacs executable to /usr/local/bin
RUN mkdir -p /opt/conda/envs/pyenv/bin/ && \
    ln -s /usr/local/bin/python3.11 /opt/conda/envs/pyenv/bin/python3.11 && \
    ln -s /usr/local/gromacs/bin/gmx /usr/local/bin/gmx


ENTRYPOINT [ "/usr/local/bin/gmx_MMPBSA" ]